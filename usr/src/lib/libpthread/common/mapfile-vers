#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright (c) 2003, 2010, Oracle and/or its affiliates. All rights reserved.
# Copyright 2017 Hayashi Naoyuki
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

#
# DO NOT TOUCH THIS FILE.
# This file declares interfaces that are cast in stone.
# They offer interfaces that will never change.
# DO NOT TOUCH THIS FILE.
#

SYMBOL_VERSION SUNW_1.4 {
    global:
	cond_reltimedwait			;
	pthread_cond_reltimedwait_np		;
    local:
	*;
} SUNW_1.3;

SYMBOL_VERSION SUNW_1.3 {
    global:
	pthread_mutexattr_getrobust_np		;
	pthread_mutexattr_setrobust_np		;
	pthread_mutex_consistent_np		;
} SUNW_1.2;

SYMBOL_VERSION SUNW_1.2 {
    global:
	getmsg					;
	getpmsg					;
	lockf					;
	msgrcv					;
	msgsnd					;
	poll					;
	pread					;
	pthread_attr_getguardsize		;
	pthread_attr_setguardsize		;
	pthread_getconcurrency			;
	pthread_mutexattr_gettype		;
	pthread_mutexattr_settype		;
	pthread_rwlockattr_destroy		;
	pthread_rwlockattr_getpshared		;
	pthread_rwlockattr_init			;
	pthread_rwlockattr_setpshared		;
	pthread_rwlock_destroy			;
	pthread_rwlock_init			;
	pthread_rwlock_rdlock			;
	pthread_rwlock_tryrdlock		;
	pthread_rwlock_trywrlock		;
	pthread_rwlock_unlock			;
	pthread_rwlock_wrlock			;
	pthread_setconcurrency			;
	putmsg					;
	putpmsg					;
	pwrite					;
	readv					;
	select					;
	sigpause				;
	usleep					;
	wait3					;
	waitid					;
	writev					;
	__xpg4_putmsg				;
	__xpg4_putpmsg				;

#$if _ELF32		# largefile APIs
#	lockf64					;
#	pread64					;
#	pwrite64				;
#$endif
} SUNW_1.1;

SYMBOL_VERSION SUNW_1.1 {
    global:
#$if _ELF32		# largefile APIs
#	creat64					;
#	open64					;
#$else
	SUNW_1.1;
#$endif
} SUNW_0.9;

SYMBOL_VERSION SUNW_0.9 {
    global:
	alarm					;
	close					;
	cond_broadcast				;
	cond_destroy				;
	cond_init				;
	cond_signal				;
	cond_timedwait				;
	cond_wait				;
	creat					;
	fcntl					;
	fork					;
	fork1					;
	fsync					;
	_getfp					;
	msync					;
	mutex_destroy				;
	mutex_init				;
	_mutex_lock				;
	mutex_lock				;
	mutex_trylock				;
	mutex_unlock				;
	open					;
	pause					;
	pthread_attr_destroy			;
	pthread_attr_getdetachstate		;
	pthread_attr_getinheritsched		;
	pthread_attr_getschedparam		;
	pthread_attr_getschedpolicy		;
	pthread_attr_getscope			;
	pthread_attr_getstackaddr		;
	pthread_attr_getstacksize		;
	pthread_attr_init			;
	pthread_attr_setdetachstate		;
	pthread_attr_setinheritsched		;
	pthread_attr_setschedparam		;
	pthread_attr_setschedpolicy		;
	pthread_attr_setscope			;
	pthread_attr_setstackaddr		;
	pthread_attr_setstacksize		;
	pthread_cancel				;
	__pthread_cleanup_pop			;
	__pthread_cleanup_push			;
	pthread_condattr_destroy		;
	pthread_condattr_getpshared		;
	pthread_condattr_init			;
	pthread_condattr_setpshared		;
	pthread_cond_broadcast			;
	pthread_cond_destroy			;
	pthread_cond_init			;
	pthread_cond_signal			;
	pthread_cond_timedwait			;
	pthread_cond_wait			;
	pthread_create				;
	pthread_detach				;
	pthread_equal				;
	pthread_exit				;
	pthread_getschedparam			;
	pthread_getspecific			;
	pthread_join				;
	pthread_key_create			;
	pthread_key_delete			;
	pthread_kill				;
	pthread_mutexattr_destroy		;
	pthread_mutexattr_getprioceiling	;
	pthread_mutexattr_getprotocol		;
	pthread_mutexattr_getpshared		;
	pthread_mutexattr_init			;
	pthread_mutexattr_setprioceiling	;
	pthread_mutexattr_setprotocol		;
	pthread_mutexattr_setpshared		;
	pthread_mutex_destroy			;
	pthread_mutex_getprioceiling		;
	pthread_mutex_init			;
	pthread_mutex_lock			;
	pthread_mutex_setprioceiling		;
	pthread_mutex_trylock			;
	pthread_mutex_unlock			;
	pthread_once				;
	pthread_self				;
	pthread_setcancelstate			;
	pthread_setcanceltype			;
	pthread_setschedparam			;
	pthread_setspecific			;
	pthread_sigmask				;
	pthread_testcancel			;
	read					;
	rwlock_init				;
	rw_rdlock				;
	rw_tryrdlock				;
	rw_trywrlock				;
	rw_unlock				;
	rw_wrlock				;
	sema_destroy				;
	sema_init				;
	sema_post				;
	sema_trywait				;
	sema_wait				;
	setitimer				;
	sigaction				;
	siglongjmp				;
	sigprocmask				;
	sigsetjmp				;
	sigsuspend				;
	sigwait					;
	sleep					;
	tcdrain					;
	thr_continue				;
	thr_create				;
	thr_exit				;
	thr_getconcurrency			;
	thr_getprio				;
	thr_getspecific				;
	thr_join				;
	thr_keycreate				;
	thr_kill				;
	thr_main				;
	thr_min_stack				;
	thr_self				;
	thr_setconcurrency			;
	thr_setprio				;
	thr_setspecific				;
	thr_sigsetmask				;
	thr_stksegment				;
	thr_suspend				;
	thr_yield				;
	wait					;
	waitpid					;
	write					;
};

SYMBOL_VERSION SUNWprivate_1.1 {
    global:
	_alarm					;
	_fork					;
	_mutex_destroy				;
	_mutex_init				;
	_mutex_unlock				;
	_pthread_setcleanupinit			;
	_resume					;
	_resume_ret				;
	_sema_destroy				;
	_setitimer				;
	_sigaction				;
	_siglongjmp				;
	_sigprocmask				;
	_sigsetjmp				;
	_sigsuspend				;
	_sleep					;
	_thr_create				;
	_thr_getspecific			;
	_thr_join				;
	_thr_keycreate				;
	_thr_main				;
	thr_probe_setup				;
	_thr_self				;
	_thr_setspecific			;
};

